{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexbeattie/Developer/freshnext/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/5/58/Black_crowes-Newport.jpg\",\n    title: \"Black Crowes\",\n    address: \"2354 Fountain Crest Lane\",\n    description: \"This is the greatest band of all time\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://artisanb:J6bOiVoornD31vem@cluster0.nvuhk.mongodb.net/althea?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('althea');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://artisanb:J6bOiVoornD31vem@cluster0.nvuhk.mongodb.net/althea?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('althea');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    props: {\n      meetupData: {\n        image: 'https://upload.wikimedia.org/wikipedia/commons/5/58/Black_crowes-Newport.jpg',\n        id: meetupId,\n        title: 'Black Crowes',\n        address: '2354 Fountain Crest Lane',\n        description: 'This is the greatest band of all time'\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/alexbeattie/Developer/freshnext/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACrB,sBAEI,QAAC,YAAD;AACI,IAAA,KAAK,EAAC,8EADV;AAEI,IAAA,KAAK,EAAC,cAFV;AAGI,IAAA,OAAO,EAAC,0BAHZ;AAII,IAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,UAFJ;AASH;;AACD,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAI,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,uGAApB,CAAtB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,QAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAACC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AAAT,KAAL,CAAlB;AAFJ,GAAP;AAOH;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAE1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAI,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,uGAApB,CAAtB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,QAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEA,SAAO;AACHW,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,KAAK,EAAE,8EADC;AAERC,QAAAA,EAAE,EAAEP,QAFI;AAGRQ,QAAAA,KAAK,EAAE,cAHC;AAIRC,QAAAA,OAAO,EAAE,0BAJD;AAKRC,QAAAA,WAAW,EAAE;AALL;AADT;AADJ,GAAP;AAWH;AACD,eAAe3B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n    return (\n\n        <MeetupDetail\n            image='https://upload.wikimedia.org/wikipedia/commons/5/58/Black_crowes-Newport.jpg'\n            title='Black Crowes'\n            address='2354 Fountain Crest Lane'\n            description='This is the greatest band of all time' />\n\n    );\n}\nexport async function getStaticPaths() {\n    const client =  await MongoClient.connect('mongodb+srv://artisanb:J6bOiVoornD31vem@cluster0.nvuhk.mongodb.net/althea?retryWrites=true&w=majority')\n      \n    const db = client.db();\n  \n    const meetupsCollection = db.collection('althea');\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n    client.close();\n \n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({params: { meetupId: meetup._id.toString() }})),\n        \n    }\n\n\n}\nexport async function getStaticProps(context) {\n\n    const meetupId = context.params.meetupId;\n    const client =  await MongoClient.connect('mongodb+srv://artisanb:J6bOiVoornD31vem@cluster0.nvuhk.mongodb.net/althea?retryWrites=true&w=majority')\n      \n    const db = client.db();\n  \n    const meetupsCollection = db.collection('althea');\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n    return {\n        props: {\n            meetupData: {\n                image: 'https://upload.wikimedia.org/wikipedia/commons/5/58/Black_crowes-Newport.jpg',\n                id: meetupId,\n                title: 'Black Crowes',\n                address: '2354 Fountain Crest Lane',\n                description: 'This is the greatest band of all time',\n            },\n        },\n    }\n}\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}